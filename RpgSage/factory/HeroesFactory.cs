using KornilichRpgSage.entities;
using KornilichRpgSage.enums;
using KornilichRpgSage.interfaces;

namespace KornilichRpgSage.factory;

public static class HeroesFactory
{
    public static List<IHero> GenerateHeroes(int count)
    {
        var heroes = new List<IHero>();
        var random = new Random();
        
        string[] names = { "Гарри", "Мари", "Томас", "Элис", "Джон", "Сара", "Аарон", "Абрам", "Аваз", "Аввакум", "Август", "Августа", "Августин", "Августина", "Авдей", "Авдий", "Авдотья", "Авигея", "Авксентий", "Авраам", "Аврор", "Аврора", "Автандил", "Автоноя", "Агап", "Агапия", "Агата", "Агафон", "Агафья", "Аггей", "Аглая", "Агнес", "Агнесса", "Агнета", "Агния", "Агриппина", "Агунда", "Ада", "Адам", "Аделаида", "Аделина", "Аделия", "Адель", "Адельфина", "Адиля", "Адис", "Адольф", "Адриан", "Адриана", "Адриенна", "Аза", "Азалия", "Азамат", "Азарий", "Азат", "Азиза", "Аида", "Айганым", "Айгерим", "Айгуль", "Айдар", "Айжан", "Айлин", "Айнагуль", "Айнур", "Айрат", "Акакий", "Аким", "Аксён", "Аксинья", "Акулина", "Алан", "Алана", "Алдона", "Алевтин", "Алевтина", "Александр", "Александра", "Александрина", "Алексей", "Алексий", "Ален", "Алёна", "Алеся", "Али", "Алика", "Алико", "Алима", "Алина", "Алира", "Алиса", "Алихан", "Алия", "Алла", "Алмаз", "Алоис", "Алсу", "Алтжин", "Альба", "Альберт", "Альберта", "Альбина", "Альвиан", "Альвина", "Альжбета", "Альфия" , "Аарон", "Абрам", "Аваз", "Аввакум", "Август", "Августа", "Августин", "Августина", "Авдей", "Авдий", "Авдотья", "Авигея", "Авксентий", "Авраам", "Аврор", "Аврора", "Автандил", "Автоноя", "Агап", "Агапия", "Агата", "Агафон", "Агафья", "Аггей", "Аглая", "Агнес", "Агнесса", "Агнета", "Агния", "Агриппина", "Агунда", "Ада", "Адам", "Аделаида", "Аделина", "Аделия", "Адель", "Адельфина", "Адиля", "Адис", "Адольф", "Адриан", "Адриана", "Адриенна", "Аза", "Азалия", "Азамат", "Азарий", "Азат", "Азиза", "Аида", "Айганым", "Айгерим", "Айгуль", "Айдар", "Айжан", "Айлин", "Айнагуль", "Айнур", "Айрат", "Акакий", "Аким", "Аксён", "Аксинья", "Акулина", "Алан", "Алана", "Алдона", "Алевтин", "Алевтина", "Александр", "Александра", "Александрина", "Алексей", "Алексий", "Ален", "Алёна", "Алеся", "Али", "Алика", "Алико", "Алима", "Алина", "Алира", "Алиса", "Алихан", "Алия", "Алла", "Алмаз", "Алоис", "Алсу", "Алтжин", "Альба", "Альберт", "Альберта", "Альбина", "Альвиан", "Альвина", "Альжбета", "Альфия" };

        for (var i = 0; i < count; i++)
        {
            HeroesEnum heroType = (HeroesEnum)random.Next(3); // выбираем случайный тип героя
            IHero hero; // создали пустой экземпляр героя
            var health = 50 + random.Next(50); // выбриаем случайное здоровье от 50 до 100
            var power = random.Next(50); // выбираем случайную силу героя от 0 до 50
            switch (heroType)
            {
                case HeroesEnum.ARCHER:
                    hero = new Archer
                    {
                        Health = health,
                        MaxHealth = health,
                        Power = power,
                        Name = names[random.Next(names.Length)],
                        ClassName = "Лучник"
                    };
                    heroes.Add(hero); // добавили героя
                    break;
                case HeroesEnum.KNIGHT:
                    hero = new Knight
                    {
                        Health = health,
                        MaxHealth = health,
                        Power = power,
                        Name = names[random.Next(names.Length)],
                        ClassName = "Рыцарь"
                    };
                    heroes.Add(hero); // добавили героя
                    break;
                case HeroesEnum.MAGE:
                    hero = new Mage
                    {
                        Health = health,
                        MaxHealth = health,
                        Power = power,
                        Name = names[random.Next(names.Length)],
                        ClassName = "Маг"
                    };
                    heroes.Add(hero); // добавили героя
                    break;
            }
        }

        return heroes;
    }
}